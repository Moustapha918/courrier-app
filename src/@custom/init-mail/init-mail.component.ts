import {Component, OnDestroy, OnInit} from '@angular/core';
import {FormBuilder, FormGroup, Validators} from '@angular/forms';
import {Subject} from 'rxjs';
import {InitMailService} from '../../app/services/init-mail.service';
import {AutoGenParamsModel} from '../../app/models/auto-gen-params.model';

@Component({
  selector: 'app-init-mail',
  templateUrl: './init-mail.component.html',
  styleUrls: ['./init-mail.component.scss']
})
export class InitMailComponent implements OnInit, OnDestroy {

    form: FormGroup;
    autoGenParams: AutoGenParamsModel;
    autoIdEntry: string;
    isDisabled = true;


    // Private
    private _unsubscribeAll: Subject<any>;

    /**
     * Constructor
     *
     * @param {FormBuilder} _formBuilder
     */
    constructor(
        private _formBuilder: FormBuilder,
        private initMailService: InitMailService,


    )
    {
        // Set the private defaults
        this._unsubscribeAll = new Subject();
    }

    // -----------------------------------------------------------------------------------------------------
    // @ Lifecycle hooks
    // -----------------------------------------------------------------------------------------------------

    /**
     * On init
     */
    ngOnInit(): void
    {

        this.form = this._formBuilder.group({
            receptionDate :  [],
            idDirectory :  [],
            idEntry :  [],
            idReceivedDocument : ['', Validators.required],
            dateReceivedDocument  : [],
            subject  : ['', Validators.required],
            sender  : ['', Validators.required],
            attachments : [],
            observations : [],
            priorityDegree : []
        });

        this.initMailService.getAutoGeneratedParamsFromBackend()
            .subscribe(
            (autoGeneratedParams) => {
             /// console.log(autoGeneratedParams);
             this.form.controls['idEntry'].setValue(autoGeneratedParams.idEntry);
             this.form.controls['idDirectory'].setValue(autoGeneratedParams.idDirectory);
             this.form.controls['receptionDate'].setValue(autoGeneratedParams.receptionDate);
             console.log(this.form.value);
            },
            (error) => {
                console.log('Error ! : ' + error);
            }
        );



    }

    /**
     * On destroy
     */
    ngOnDestroy(): void
    {
        // Unsubscribe from all subscriptions
        this._unsubscribeAll.next();
        this._unsubscribeAll.complete();
    }

    // -----------------------------------------------------------------------------------------------------
    // @ Public methods
    // -----------------------------------------------------------------------------------------------------

    /**
     * Finish the horizontal stepper
     */
    finishHorizontalStepper(): void
    {
        alert('You have finished the horizontal stepper!');
    }

    /**
     * Finish the vertical stepper
     */
    finishVerticalStepper(): void
    {
        alert('You have finished the vertical stepper!');
    }


    validateArrivedMail(): void{

        console.log(' fom', this.form);
        // console.log(this.autoGenParams);
        this.initMailService.sendArrivedMailFormToBackend(this.form.value)
            .subscribe(
                () => {
                     console.log('form sent to backend');
                },
                (error) => {
                    console.log('Error ! : ' + error);
                }
            );

        // TO CHECK ??
        // this.initMailService.saveArrivedMailToBackend(this.form.value);
    }
}
