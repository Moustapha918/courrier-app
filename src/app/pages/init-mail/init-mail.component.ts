import {Component, OnDestroy,  ElementRef, OnInit, ViewChild} from '@angular/core';
import {FormBuilder, FormGroup, Validators} from '@angular/forms';
import {Subject} from 'rxjs';
import {InitMailService} from '../../services/init-mail.service';
import {Router} from '@angular/router';
import {FileUploader} from 'ng2-file-upload';

@Component({
    selector: 'app-init-mail',
    templateUrl: './init-mail.component.html',
    styleUrls: ['./init-mail.component.scss']
})
export class InitMailComponent implements OnInit, OnDestroy {

    // @ts-ignore
    @ViewChild('fileInput') fileInput: ElementRef;

    uploader: FileUploader;
    isDropOver: boolean;

    form: FormGroup;
    scanFile: any;
    scanFileName: string;

    private _unsubscribeAll: Subject<any>;

    constructor(
        private _formBuilder: FormBuilder,
        private initMailService: InitMailService,
        private router: Router
    ) {
        this._unsubscribeAll = new Subject();
    }

    ngOnInit(): void {

        this.form = this._formBuilder.group({
            receptionDate: [
                {
                    value: '',
                    disabled: true
                }, Validators.required
            ],
            idDirectory: [
                {
                    value: '',
                    disabled: true
                }, Validators.required
            ],
            idEntry: [{
                value: '',
                disabled: true
            }, Validators.required
            ],
            idReceivedDocument: ['', Validators.required],
            dateReceivedDocument: [],
            subject: ['', Validators.required],
            sender: ['', Validators.required],
            attachments: [],
            observations: [],
            priorityDegree: [],
            idScanFile: []
        });

        this.initMailService.getAutoGeneratedParamsFromBackend()
            .subscribe(
                (autoGeneratedParams) => {
                    this.form.controls['idDirectory'].setValue(autoGeneratedParams.idDirectory);
                    this.form.controls['receptionDate'].setValue(autoGeneratedParams.receptionDate);
                    this.form.controls['idEntry'].setValue(autoGeneratedParams.idEntry);

                    console.log(this.form.getRawValue());
                },
                (error) => {
                    console.log('Error ! : ' + error);
                }
            );
    }



    fileOverAnother(e: any): void {
        console.log(e);

        console.log(this.fileInput.nativeElement.files);
        this.isDropOver = e;
    }

    fileClicked(): void {
        this.fileInput.nativeElement.click();

        const headers = [{name: 'Accept', value: 'application/json'}];
        this.uploader = new FileUploader({url: this.initMailService.uploadScanFileURI + '/'
                + this.form.controls['idEntry'].value , autoUpload: true, headers: headers});

        this.uploader.onAfterAddingFile = (item => { // to allow cross o
            item.withCredentials = false;
        });

        console.log(this.uploader.response);
        this.uploader.onCompleteAll = () =>  {

            this.scanFileName = this.fileInput.nativeElement.files[0].name;

            console.log(this.fileInput.nativeElement.files[0].name);
        };

    }



    ngOnDestroy(): void {
        // Unsubscribe from all subscriptions
        this._unsubscribeAll.next();
        this._unsubscribeAll.complete();
    }

    validateArrivedMail(): void {

        this.initMailService.sendArrivedMailFormToBackend(this.form.getRawValue())
             .subscribe(
                 () => {
                     this.router.navigate(['arrivedMail-sc']);
                 },
                 (error) => {
                     console.log('Error ! : ' + error);
                 }
             );

    }
    //

    sendScanFile(): void {
        // this.scanFile.name =  this.form.controls['idEntry'].value + '_' +  this.scanFile.name;
        this.initMailService.sendFileToBackend(this.scanFile)
            .subscribe(
                () => {
                    // this.router.navigate([']);
                    console.log('file sent to backend');
                    console.log(this.scanFile);
                },
                (error) => {
                    console.log('Error ! : ' + error);
                }
            );
    }
    //
    // onSelectFile(event) {
    //     if(event.target.files && event.target.files.length > 0) {
    //         this.file = event.target.files[0];
    //         this.fileInformation = null;
    //     }
    // }

    uploadScan(fileEvent: any): void{
        this.scanFile = fileEvent.target.files[0];
        console.log(this.form.controls['idEntry'].value + '_' + this.scanFile.name);
        console.log(this.scanFile);
    }

    selectFile(): void{
        console.log('file upload');
    }
}
